{"remainingRequest":"/Users/mdzz/Desktop/公开课/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/Users/mdzz/Desktop/公开课/src/App.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/mdzz/Desktop/公开课/src/App.vue","mtime":1621437505650},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_vue-loader@15.9.7@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mdzz/Desktop/公开课/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgbGlzdC1zdHlsZTogbm9uZTsKfQouZHlfYm94IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93OiBoaWRkZW47CiAgYmFja2dyb3VuZDogIzAwMDsKICAubGlzdF9ib3ggewogICAgLnZpZGVvX2JveCB7CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIGhlaWdodDogMTAwdmg7CiAgICAgIC52aWRlbyB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHRvcDogMDsKICAgICAgICBsZWZ0OiAwOwogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICB6LWluZGV4OiAxMDsKICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwOwogICAgICB9CiAgICAgIC5jb250ZW50X2JveCB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHRvcDogMDsKICAgICAgICBsZWZ0OiAwOwogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICB6LWluZGV4OiAyMDsKICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApOwogICAgICAgIC50aXRsZSB7CiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICBib3R0b206IDUwcHg7CiAgICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgICAgIHBhZGRpbmc6IDIwcHg7CiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgICAgICAgZm9udC1zaXplOiAzMHB4OwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KICAvLyDkuI3nm7TmjqXnu5kgbGlzdF9ib3gg5Yqg6L+H5bqm5pWI5p6c5piv5Zug5Li6IOWPquacieWcqOaJi+aMh+advuW8gOeahOaJjeaciei/h+a4oSDmiYvmjIfmu5HliqjnmoTml7blgJnkuI3pnIDopoHliqDov4fmuKEKICAuYW5pbWF0ZUNsYXNzIHsKICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzOwogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"dy_box\">\n    <div\n      class=\"list_box\"\n      :class=\"{ animateClass: flag }\"\n      :style=\"{\n        transform: `translateY(${y}px)`,\n        paddingTop: (moveIndex ? moveIndex - 1 : 0) * clientY + 'px',\n      }\"\n    >\n      <!-- 加paddingTop把高度撑起来 第0个视屏不需要撑 以后的每个视屏撑之前所有视屏的高度  -->\n      <template v-for=\"(item, index) in renderList\">\n        <div\n          v-if=\"item\"\n          class=\"video_box\"\n          :key=\"item.id\"\n          @touchstart=\"start\"\n          @touchmove=\"move\"\n          @touchend=\"end($event, index)\"\n        >\n          <video\n            ref=\"video\"\n            :src=\"item.src\"\n            class=\"video\"\n            :muted=\"item.muted\"\n            :autoplay=\"index == 0\"\n            loop\n          ></video>\n          <div class=\"content_box\">\n            <p class=\"title\">{{ item.title }}</p>\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nlet clientY =\n  document.body.clientHeight || document.documentElement.clientHeight;\nexport default {\n  data() {\n    return {\n      list: [\n        // muted 控制静音\n        {\n          id: 1,\n          muted: true,\n          src: require(\"./assets/videos/1.mp4\"),\n          title: \"阜阳\",\n        },\n        {\n          id: 2,\n          muted: true,\n          src: require(\"./assets/videos/2.mp4\"),\n          title: \"王嘉尔\",\n        },\n        {\n          id: 3,\n          muted: true,\n          src: require(\"./assets/videos/3.mp4\"),\n          title: \"安东尼\",\n        },\n        {\n          id: 4,\n          muted: true,\n          src: require(\"./assets/videos/4.mp4\"),\n          title: \"魏晨\",\n        },\n        {\n          id: 5,\n          muted: true,\n          src: require(\"./assets/videos/5.mp4\"),\n          title: \"陈冠希\",\n        },\n      ],\n      y: 0, // 控制向上移动的距离\n      flag: false,\n      moveIndex: 0, //用来记录当前项\n      clientY,\n    };\n  },\n  computed: {\n    renderList() {\n      let ary = [];\n      ary = this.list.map((item, index) => {\n        // 加载当前项的上一个 和 下一个 视屏 数组里一共就三个视屏\n        if (\n          index == this.moveIndex ||\n          index == this.moveIndex - 1 ||\n          index == this.moveIndex + 1\n        ) {\n          return item;\n        } else {\n          return \"\";\n        }\n      });\n      console.log(ary);\n      return ary;\n    },\n  },\n  methods: {\n    start(e) {\n      this.flag = false;\n      this.startY = e.touches[0].pageY;\n      this.startMoveY = this.y; // 当前这次移动之前已经移动的距离\n    },\n    move(e) {\n      let moveY = e.touches[0].pageY - this.startY;\n      this.y = moveY + this.startMoveY;\n    },\n    end(e, n) {\n      // 松手时移动的距离\n      let endY = e.changedTouches[0].pageY - this.startY;\n      // 移动的距离不超过1/4 回到原位 , 大于1/4屏就滑倒下一个\n      if (Math.abs(endY) < clientY / 4) {\n        this.y = this.startMoveY;\n      } else {\n        // 向上滑 看下一个视屏\n        if (endY < 0) {\n          // 说明当前视屏下面还有视屏\n          if (this.list[n + 1]) {\n            // 在当前的基础下 往下滑动一屏\n            this.y = this.startMoveY - clientY;\n            this.moveIndex++;\n            this.$nextTick(() => {\n              // 这里用ref获取会有点bug\n              let videos = document.getElementsByClassName(\"video\");\n              //  一共就三个视屏 都是索引为1的播放 索引为0和2的暂停\n              // 往下滑动 当前播放的的永远都是索引为1的那一项\n              videos[0] && videos[0].pause();\n              videos[2] && videos[2].pause();\n              if (videos[1]) {\n                videos[1].currentTime = 0; // 每次从头开始播放\n                //videos[1].muted = false; // 取消静音 这里加上会报错 让app去设置自动播放就好了\n                videos[1].play();\n              }\n            });\n          } else {\n            // 下面没有视屏了 回到当前视屏 或者可以做个加载更多\n            this.y = this.startMoveY;\n          }\n        } else {\n          // 向下滑 看上一个视屏\n          // 说明当前视屏上面还有视屏\n          if (this.list[n - 1]) {\n            // 在当前的基础下 往上滑动一屏\n            this.y = this.startMoveY + clientY;\n            this.moveIndex--;\n            this.$nextTick(() => {\n              let videos = document.getElementsByClassName(\"video\");\n              // 往上滑动 当前播放的 是索引为1的那一项 和 索引为0的那一项(滑倒第一个)\n              if (this.moveIndex == 0) {\n                videos[1] && videos[1].pause();\n                if (videos[0]) {\n                  videos[0].currentTime = 0;\n                  videos[0].play();\n                }\n              } else {\n                videos[0] && videos[0].pause();\n                videos[2] && videos[2].pause();\n                if (videos[1]) {\n                  videos[1].currentTime = 0;\n                  videos[1].play();\n                }\n              }\n            });\n          } else {\n            // 上面没有视屏了 回到当前视屏 或者可以做个刷新所有视屏\n            this.y = this.startMoveY;\n          }\n        }\n      }\n      this.flag = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n* {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n.dy_box {\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background: #000;\n  .list_box {\n    .video_box {\n      position: relative;\n      width: 100%;\n      height: 100vh;\n      .video {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 10;\n        background: #000;\n      }\n      .content_box {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 20;\n        background: rgba(0, 0, 0, 0);\n        .title {\n          position: absolute;\n          bottom: 50px;\n          color: #fff;\n          padding: 20px;\n          box-sizing: border-box;\n          font-size: 30px;\n        }\n      }\n    }\n  }\n  // 不直接给 list_box 加过度效果是因为 只有在手指松开的才有过渡 手指滑动的时候不需要加过渡\n  .animateClass {\n    transition: transform 0.5s;\n  }\n}\n</style>"]}]}